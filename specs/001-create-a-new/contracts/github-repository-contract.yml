# GitHub Repository Contract
# Defines the expected repository structure and protection rules

version: '1.0'
name: 'GitHub Repository Configuration'
description: 'Contract specification for repository setup and branch protection'

# Repository Structure Contract
repository_structure:
  required_files:
    - path: 'package.json'
      type: 'json'
      validation: 'valid_npm_package'
      
    - path: 'tsconfig.json'  
      type: 'json'
      validation: 'valid_typescript_config'
      
    - path: 'next.config.js'
      type: 'javascript'
      validation: 'valid_next_config'
      
    - path: '.eslintrc.json'
      type: 'json' 
      validation: 'valid_eslint_config'
      
    - path: '.gitignore'
      type: 'text'
      required_entries:
        - 'node_modules/'
        - '.next/'
        - '.env*'
        - '*.log'
        
    - path: 'README.md'
      type: 'markdown'
      required_sections:
        - 'Project Description'
        - 'Getting Started'
        - 'Development'
        - 'Deployment'

  directory_structure:
    - path: 'src/'
      type: 'directory'
      purpose: 'application_source'
      
    - path: 'public/'
      type: 'directory'  
      purpose: 'static_assets'
      
    - path: 'src/app/'
      type: 'directory'
      purpose: 'next_app_router'

# Branch Protection Contract
branch_protection:
  protected_branches:
    main:
      protection_rules:
        - 'require_pull_request_reviews'
        - 'dismiss_stale_reviews'
        - 'require_review_from_codeowners'
        - 'restrict_pushes'
        - 'require_status_checks'
        - 'require_up_to_date_before_merging'
        
      required_status_checks:
        - 'build'
        - 'type-check'  
        - 'lint'
        
      review_requirements:
        required_reviewers: 1
        dismiss_stale_reviews: true
        require_code_owner_reviews: false
        
    staging:
      protection_rules:
        - 'require_pull_request_reviews'
        - 'restrict_pushes'  
        - 'require_status_checks'
        
      required_status_checks:
        - 'build'
        - 'type-check'
        - 'lint'
        
      review_requirements:
        required_reviewers: 1
        dismiss_stale_reviews: true

  merge_strategies:
    allowed_methods:
      - 'merge_commit'
      - 'squash_and_merge'
    default: 'squash_and_merge'
    
  deletion_protection:
    main: true
    staging: true
    feature_branches: false

# Workflow Contract
git_workflow:
  branch_naming:
    feature_branches: 'feature/[issue-number]-[short-description]'
    hotfix_branches: 'hotfix/[issue-number]-[short-description]'
    release_branches: 'release/[version-number]'
    
  commit_message_format:
    pattern: '[type]([scope]): [description]'
    types: ['feat', 'fix', 'docs', 'style', 'refactor', 'test', 'chore']
    max_length: 72
    
  pull_request_template:
    required_sections:
      - 'Description'
      - 'Changes Made'  
      - 'Testing'
      - 'Checklist'

# Integration Contract
github_integrations:
  cloudflare_pages:
    webhook_events:
      - 'push'
      - 'pull_request'
      - 'deployment_status'
      
    permissions:
      contents: 'read'
      deployments: 'write'
      statuses: 'write'
      
  required_secrets:
    - name: 'CLOUDFLARE_API_TOKEN'
      purpose: 'deployment_authentication'
      scope: 'repository'

# Access Control Contract  
repository_access:
  visibility: 'private' # or 'public' based on project requirements
  
  team_permissions:
    admin:
      permissions: ['admin']
      members: ['repository_owner']
      
    maintainers:
      permissions: ['maintain', 'push']
      members: [] # to be defined based on team
      
    contributors:
      permissions: ['triage', 'pull']  
      members: [] # to be defined based on team

# Security Contract
security_settings:
  vulnerability_alerts: true
  dependency_security_updates: true
  
  branch_protection_enforcement:
    include_administrators: true
    allow_force_pushes: false
    allow_deletions: false
    
  required_signed_commits: false # can be enabled for higher security
  
  secrets_scanning: true
  dependency_review: true

# Compliance Contract
compliance:
  required_labels:
    - 'bug'
    - 'enhancement'  
    - 'documentation'
    - 'good first issue'
    - 'help wanted'
    
  issue_templates:
    - 'bug_report.md'
    - 'feature_request.md'
    
  contributing_guidelines:
    file: 'CONTRIBUTING.md'
    required_sections:
      - 'Development Setup'
      - 'Pull Request Process'
      - 'Code Style Guidelines'
      - 'Testing Requirements'