{
  "permissions": {
    "allow": [
      "Bash(scripts/create-new-feature.sh:*)",
      "Bash(scripts/setup-plan.sh:*)",
      "Bash(scripts/check-task-prerequisites.sh:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx create-next-app:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npx @next/codemod@canary next-lint-to-eslint-cli:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git check-ignore:*)",
      "Bash(test:*)",
      "Bash(npx jest:*)",
      "Bash(./node_modules/.bin/jest:*)",
      "Bash(.\\node_modules\\.bin\\jest:*)",
      "Bash(powershell:*)",
      "Bash(cmd /c:*)",
      "Bash(findstr:*)",
      "Bash(npx ts-jest:*)",
      "Bash(npx tsc:*)",
      "Bash(npx next lint:*)",
      "Bash(npx eslint:*)",
      "Bash(npx next build:*)",
      "Bash(gh:*)",
      "Bash(git fetch:*)",
      "Bash(winget:*)",
      "Bash(refreshenv)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" --version)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth status)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches)",
      "Bash(git show-branch:*)",
      "Bash(where gh)",
      "Bash(export:*)",
      "Bash(curl:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/master/protection)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/staging/protection)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/staging/protection --method PUT --field required_status_checks.strict=true --field required_status_checks.contexts[]=\"build\" --field required_status_checks.contexts[]=\"type-check\" --field required_status_checks.contexts[]=\"lint\" --field required_pull_request_reviews.required_approving_review_count=1 --field required_pull_request_reviews.dismiss_stale_reviews=true --field required_pull_request_reviews.require_code_owner_reviews=false --field enforce_admins=true --field allow_force_pushes=false --field allow_deletions=false)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/staging/protection --method PUT --input staging-protection.json)",
      "Bash(git ls-tree:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/master/protection --method DELETE)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 1 --merge)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/master/protection --method PUT --field required_status_checks.strict=true --field required_status_checks.contexts[]=\"build\" --field required_status_checks.contexts[]=\"type-check\" --field required_status_checks.contexts[]=\"lint\" --field required_pull_request_reviews.required_approving_review_count=1 --field required_pull_request_reviews.dismiss_stale_reviews=true --field required_pull_request_reviews.require_code_owner_reviews=false --field enforce_admins=true --field allow_force_pushes=false --field allow_deletions=false)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/jaikirat/cpaonwebllp/branches/master/protection --method PUT --input master-protection.json)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr create --title \"Fix Cloudflare Pages Tailwind CSS dependency error\" --base master --body \"$(cat <<''EOF''\n## Summary\n- Fix missing Tailwind CSS PostCSS dependency error in Cloudflare Pages production builds\n- Move Tailwind CSS packages from devDependencies to dependencies\n\n## Problem\n- Production build failing with \"Cannot find module '@tailwindcss/postcss'\" error\n- Cloudflare Pages production builds may not install devDependencies\n- PostCSS requires Tailwind packages during build process\n\n## Solution\n- Move `@tailwindcss/postcss` and `tailwindcss` to dependencies\n- Ensures packages are available during production build\n- Maintains all Tailwind CSS functionality\n\n## Test plan\n- [x] Local build succeeds with new dependency structure\n- [x] Static export generates correctly\n- [ ] Cloudflare Pages production build succeeds after merge\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\nEOF\n)\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 3 --merge)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 4 --merge)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 5 --merge)",
      "Bash(git branch:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 6 --merge)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" pr merge 6 --admin --merge)",
      "Bash(npx tailwindcss:*)",
      "Bash(npx:*)"
    ],
    "deny": [],
    "ask": []
  }
}